---
import { marked } from "marked";
import BaseLayout from "../layouts/BaseLayout.astro";
import siteConfig from "../site-config";
import ListPosts from "../components/ListPosts.vue";
import { getPosts } from "../utils/posts";

const posts = await getPosts("blog");
const talks = await getPosts('talks')
---

<script>
  const getRandomInt = (min: number, max: number) =>
    Math.floor(Math.random() * (max - min + 1)) + min;

  function randomiseStringInDOMElt(elt: any) {
    const chars = ["$", "%", "#", "@", "&", "(", ")", ",", "=", "*", "/"];
    const letters = elt.textContent.split("");
    let displayString = "";

    // Randomising times in milliseconds
    const randomisingTime = 40;
    const randomisingTime2 = 60;
    const randomisingTime3 = 30;

    letters.forEach((char: string, index: number) => {
      const delay1 = index * randomisingTime;
      setTimeout(() => {
        displayString +=
          Math.random() < 0.5 ? chars[getRandomInt(0, chars.length - 1)] : char;
        elt.textContent = displayString;
      }, delay1);

      const delay2 =
        letters.length * randomisingTime + index * randomisingTime2;
      setTimeout(() => {
        const arr = displayString.split("");
        arr[index] = char;
        elt.textContent = arr.join("");
      }, delay2);

      const delay3 =
        letters.length * randomisingTime +
        letters.length * randomisingTime2 +
        index * randomisingTime3;
      setTimeout(() => {
        const arr = displayString.split("");
        arr[index] = char;
        displayString = arr.join("");
        elt.textContent = displayString;
      }, delay3);
    });
  }

  function $(s: any) {
    return document.getElementById(s) || document.querySelector(s);
  }

  const helloTranslations = [
    "salut !",
    "hola !",
    "hej !",
    "Привет",
    "olá !",
    "hallo !",
    "ciao !",
    "你好",
    "مرحبا",
  ];

  document.addEventListener("DOMContentLoaded", () => {
    function hello() {
      let workingHellos = [...helloTranslations];
      const interval = 2000;
      setInterval(() => {
        const randomIndex = Math.floor(Math.random() * workingHellos.length);
        $("hello").textContent = workingHellos[randomIndex];
        randomiseStringInDOMElt($("hello"));
        workingHellos = workingHellos.filter(
          (elt) => elt !== workingHellos[randomIndex],
        );
        if (workingHellos.length === 0)
          workingHellos = [...helloTranslations, "Hello !"];
      }, interval);
    }

    // hello();
  });
</script>

<BaseLayout description={siteConfig.description} image={siteConfig.image}>
  <div class="text-xl mt-8">
    <div class="mb-8 text-3xl">
      <h1
        id="hello"
        class="xl:text-9xl md:text-7xl text-6xl font-neucha text-[#eaeaea] dark:text-[#474747] relative -ml-2 -mb-4 xl:-ml-18 xl:-mb-12 -z-10"
      >
        hi !
      </h1>
      <p
        class="text-slate-900 text-2xl sm:text-3xl lg:text-4xl tracking-tight dark:text-white"
      >
        I'm <span id="name">boris</span>, and I build software<br />
      </p>
    </div>
    <div class="details">
      <p>
        I currently lead the Workers observability team at <a
          href="https://cloudflare.com"
          class="prose-link"
          target="_blank"
          rel="noopener noreferrer">Cloudflare</a
        >. I hangout
        on <a
          href="https://x.com/boristane"
          rel="noopener noreferrer"
          class="prose-link">x (twitter)</a
        > - hit me up, my dms are open!
      </p>
    </div>
    <div mt-16>
      <h1
        class="xl:text-7xl md:text-6xl text-4xl font-neucha text-[#eaeaea] dark:text-[#474747] relative -ml-2 -mb-4 xl:-ml-18 xl:-mb-8 -z-10"
      >
        blog
      </h1>
      <ListPosts list={posts as any[]} mini={true} />
    </div>
    <div mt-8>
      <h1
        class="xl:text-7xl md:text-6xl text-4xl font-neucha text-[#eaeaea] dark:text-[#474747] relative -ml-2 -mb-4 xl:-ml-18 xl:-mb-8 -z-10"
      >
        talks
      </h1>
      <ListPosts list={talks as any[]} mini={true} />
    </div>
  </div>
</BaseLayout>
